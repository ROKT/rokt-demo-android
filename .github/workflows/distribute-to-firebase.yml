name: Distribute to Firebase

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: ./.github/actions/setup-java

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Configure Google Services File
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $GOOGLE_SERVICES_JSON | base64 -di > app/google-services.json

      - name: Configure Keystore
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
        run: echo $ANDROID_KEYSTORE_FILE | base64 -di > app/keystore.jks

      - name: Assemble Release
        env:
          STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          export_environment_variables: true
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Distribute to Firebase
        run: |
          firebase appdistribution:distribute \
            --app '${{ secrets.FIREBASE_APP_ID }}' \
            app/build/outputs/apk/release/app-release.apk \
            --groups '${{ secrets.TESTING_GROUPS }}'
