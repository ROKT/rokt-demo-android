name: Release from main

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Build APK
        uses: ./.github/actions/build-apk
        with:
          store_password: ${{ secrets.ANDROID_STORE_PASSWORD }}
          key_alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          key_password: ${{ secrets.ANDROID_KEY_PASSWORD }}
          google_services_json: ${{ secrets.GOOGLE_SERVICES_JSON }}
          keystore_file: ${{ secrets.ANDROID_KEYSTORE_FILE }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk

  publish-to-firebase-and-tag:
    runs-on: ubuntu-latest
    needs: build-apk

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download APK artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: release-apk
          path: .

      - name: Get version name
        id: version-name
        run: |
          version_name=$(grep "version_name=" gradle.properties | cut -d'=' -f2)
          echo "version_name=$version_name" >> $GITHUB_OUTPUT
          is_snapshot=$(echo "$version_name" | grep -q "SNAPSHOT" && echo "true" || echo "false")
          echo "is_snapshot=$is_snapshot" >> $GITHUB_OUTPUT

      - name: Get release notes
        id: release-notes
        run: |
          # Get the commit message of the last merge
          RELEASE_NOTES=$(git log -1 --pretty=%B)
          # Escape newlines and quotes for JSON
          RELEASE_NOTES=$(echo "$RELEASE_NOTES" | sed ':a;N;$!ba;s/\n/\\n/g' | sed 's/"/\\"/g')
          echo "release_notes=$RELEASE_NOTES" >> $GITHUB_OUTPUT

      - name: Upload APK
        uses: ./.github/actions/upload-apk
        with:
          apk_path: app-release.apk
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          firebase_app_id: ${{ secrets.FIREBASE_APP_ID }}
          testing_groups: ${{ secrets.TESTING_GROUPS }}
          release_notes: SDK Version ${{ steps.version-name.outputs.version_name }} \n ${{ steps.release-notes.outputs.release_notes }}

      - name: Create Github release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1.16.0
        if: steps.version-name.outputs.is_snapshot == 'false'
        with:
          artifacts: app-release.apk
          makeLatest: true
          tag: ${{ steps.version-name.outputs.version_name }}
          body: |
            ## Release notes:
            ${{ steps.release-notes.outputs.release_notes }}
