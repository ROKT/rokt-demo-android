# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Build Android Demo"
  lane :buildAndKtlint do
    # Build android flavours and unit test
    gradle(task: "assembleDebug")
    gradle(task: "ktlintCheck")
  end

  desc "Deploy a internal version to the Google Play"
  lane :internal do
    gradle(
          task: 'assemble',
          build_type: 'Release'
        )
    upload_to_play_store(track: 'internal',
                         release_status: 'draft')
  end

  desc "Publish to App Center"
  lane :publishToAppCenter do
    build_number = if ENV['BUILDKITE_BUILD_NUMBER'].nil?
                    "11"
                   else
                    ENV['BUILDKITE_BUILD_NUMBER']
                   end
    gradle(
        task: 'assemble',
        build_type: 'Release',
        properties: {
            "version_code" => build_number,
            "version_name" => "BUILD_#{build_number}",
          }
        )
    appcenter_upload(
          api_token: ENV['APPCENTER_API_TOKEN'],
          owner_name: ENV['APPCENTER_APP_OWNER'],
          app_name: ENV['APPCENTER_APP_NAME'],
          destinations: ENV['APPCENTER_APP_DESTINATION'],
          file: "app/build/outputs/apk/release/app-release.apk",
          release_notes: "Android Demo app version #{build_number}.\nBranch: #{ENV['BUILDKITE_BRANCH']}\n#{ENV['BUILDKITE_MESSAGE']}",
          notify_testers: true
        )
  end

    desc "Deploy a release version to the Google Play"
    lane :release do
      gradle(
            task: 'assemble',
            build_type: 'Release'
          )
      upload_to_play_store()
    end

  desc "Deploy a new version to the Google Play"
  lane :production do
    gradle(task: "clean bundleRelease")
    upload_to_play_store
  end

end
